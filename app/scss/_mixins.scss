@mixin line-clamp(
  $font-size,
  $line-height,
  $lines-to-show
) {
  @if unitless($line-height) == false {
    $line-height: create-unitless-line-height($font-size, $line-height);
  }

  display: block; // Fallback for non-webkit browsers
  display: -webkit-box;
  font-size: $font-size + px;
  max-height: ($font-size * $line-height * $lines-to-show) + px; // Fallback for non-webkit browsers
  line-height: $line-height;
  overflow: hidden;
  text-overflow: ellipsis;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: $lines-to-show;
}

// @mixin line-clamp($lines: 1) {
//   @if $lines <=1 {
//     overflow: hidden;
//     text-overflow: ellipsis;
//     white-space: nowrap;
//   } @else {
//     overflow: hidden;
//     text-overflow: ellipsis;
//     display: -webkit-box;
//     -webkit-line-clamp: $lines;
//     -webkit-box-orient: vertical;
//   }
// }

@mixin r($width) {
  @media only screen and (max-width: $width+ "px") {
    @content; 
  } 
}

@mixin pseudo($display: block, $pos: absolute, $content: ''){
  content: $content;
  display: $display;
  position: $pos;
}

// Использование миксина без аргументов
// .class::after {
//   @include pseudo;
//   width: 30px;
//   height: 30px;
// }